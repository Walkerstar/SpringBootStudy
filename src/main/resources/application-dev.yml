server:
  port: 8080


spring:
  redis:
    database: 0
    timeout: 0
    # Redis服务器地址
    host: 192.168.190.12
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    #password: root
    # 连接池最大连接数（使用负值表示没有限制）

  rabbitmq:
    host: 192.168.190.12
    port: 5672
    username: testUser
    password: testUser
    #这个配置是保证提供者确保消息推送到交换机中，不管成不成功，都会回调
    publisher-confirm-type: correlated
    #保证交换机能把消息推送到队列
    publisher-returns: true
    virtual-host: /
    #这个配置是保证消费者会消费消息，手动确认
    listener:
      simple:
        acknowledge-mode: manual
    template:
      mandatory: true

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/demo?useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useOldAliasMetadataBehavior=true
    username: root
    password: root1234

mybatis:
  mapper-locations: classpath:mapping/*Mapper.xml
  type-aliases-package: com.example.mybatisstudy.entity
  configuration:
    #auto-mapping-unknown-column-behavior: failing
    #auto-mapping-behavior: full
    map-underscore-to-camel-case: true
#  type-handlers-package: com.example.mybatisstudy.handler

redis:
  mq:
    stream:
      # key 名称
      - name: redis:mq:streams:key1
        group:
          # 消费者组名称
          - name: group1
            # 消费者名称
            consumers: group1-con1,group1-con2
      - name: redis:mq:streams:key2
        group:
          - name: group2
            consumers: group2-con1,group2-con2
      - name: redis:mq:streams:key3
        group:
          - name: group3
            consumers: group3-con1,group3-con2